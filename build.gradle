plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0' apply false
    id 'io.spring.dependency-management' version '1.1.6' apply false
}

allprojects {
    group = 'com.telecom.membership'
    version = '0.0.1-SNAPSHOT'
    
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    java {
        sourceCompatibility = '17'
    }

    // Spring Cloud 버전 관리를 위한 의존성 관리 추가
    ext {
        set('resilience4jVersion', "2.2.0")
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.7.0'

        // Swagger 의존성 추가
        implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.1.0'

        // gateway와 async 프로젝트에만 Resilience4j 의존성 추가
        if (project.name in ['gateway', 'async']) {
            //Resilience4J
            implementation "io.github.resilience4j:resilience4j-circuitbreaker:${resilience4jVersion}"
            implementation "io.github.resilience4j:resilience4j-ratelimiter:${resilience4jVersion}"
            implementation "io.github.resilience4j:resilience4j-retry:${resilience4jVersion}"
            implementation "io.github.resilience4j:resilience4j-bulkhead:${resilience4jVersion}"
            implementation "io.github.resilience4j:resilience4j-cache:${resilience4jVersion}"
            implementation "io.github.resilience4j:resilience4j-timelimiter:${resilience4jVersion}"
            implementation "io.github.resilience4j:resilience4j-spring-boot3:${resilience4jVersion}"
            implementation "io.github.resilience4j:resilience4j-reactor:${resilience4jVersion}"

            implementation 'com.azure:azure-core:1.44.1'
            implementation 'com.azure:azure-messaging-eventgrid:4.18.0'

        }
        
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'io.projectreactor:reactor-test'
    }
}
