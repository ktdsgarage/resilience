server:
  port: ${SERVER_PORT:8080}

spring:
  cloud:
    gateway:
      routes:
        - id: point_service
          uri: http://point
          predicates:
            - Path=/api/points/**
          filters:
            - name: CircuitBreakerFilter
              args:
                circuitBreakerName: point-service
            - name: RequestTimeout
              args:
                timeout: ${RESPONSE_TIMEOUT:2000}
            - name: ReactiveResilience4JCircuitBreaker
              args:
                name: point-service
resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: ${CB_SLIDING_WINDOW_SIZE:10}
        failureRateThreshold: ${CB_FAILURE_RATE_THRESHOLD:50}
        waitDurationInOpenState: ${CB_WAIT_DURATION_IN_OPEN:30000}
        permittedNumberOfCallsInHalfOpenState: ${CB_PERMITTED_CALLS_IN_HALF_OPEN:5}
        slowCallDurationThreshold: ${CB_SLOW_CALL_DURATION_THRESHOLD:1000}
        slowCallRateThreshold: ${CB_SLOW_CALL_RATE_THRESHOLD:50}
        ignoreExceptions:
          - org.springframework.web.server.ResponseStatusException
    instances:
      point-service:
        baseConfig: default
        recordExceptions:
          - java.util.concurrent.TimeoutException
          - java.io.IOException
          - org.springframework.web.reactive.function.client.WebClientRequestException
azure:
  eventgrid:
    endpoint: ${EVENTGRID_ENDPOINT}
    key: ${EVENTGRID_KEY}
    dlq-topic: ${EVENTGRID_DLQ_TOPIC}

# Swagger UI 설정
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: method
    doc-expansion: none
  api-docs:
    path: /api-docs
  show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
